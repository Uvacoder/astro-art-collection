<div class="flex pt-11 px-6 md:px-16 lg:px-32 w-full justify-between items-center">
    <div class="w-full md:w-1/2 flex flex-col justify-center ">
        <h1 class="text-xl">
            Enter Anas's Doodle-Dazzled <span id="scribble" class="font-bold">Digital Univere!</span>
        </h1>

        <div class="relative">
            <svg class="absolute h-full w-full overflow-visible">
                <defs>
                    <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                        <stop offset="0%" style={{ stopColor: "#F9E0BB", stopOpacity: 1 }}
                        ></stop>
                        <stop offset="100%" style={{ stopColor: "#884A39", stopOpacity: 1 }}
                        ></stop>
                    </linearGradient>
                </defs>
                <path
                    id="border-path"
                    fill="none"
                    stroke="url(#gradient)"
                    stroke-width="4"></path>
            </svg>
            <p id="anim-p" class="p-6 text-main">
                Welcome to my gallery website! I'm <span class="font-bold text-primary">Anas Bensaid</span> a software engineer with a deep passion for AI art. This platform serves as a virtual space for me to showcase my extensive collection and share my appreciation for the intersection of technology and creativity.
                <br />
                <br />
                Art has always captivated me, but when I discovered the world of AI-generated art, my perception of creativity expanded exponentially. Witnessing the power of artificial intelligence to create captivating and thought-provoking pieces amazed me.
                <br />
                <br />
                Through this gallery, I celebrate the marriage of AI and art, showcasing the incredible works that emerge when these two realms intertwine. Each piece has been meticulously curated to highlight the mesmerizing aesthetics, intricate details, and boundless creativity that AI art brings to the world.
            </p>
    </div>
    <div class="flex justify-center py-8 text-center text-main text-content xl:gap-16">
        <div class="w-32">
            <h2>Art Posts</h2>
            <p id="art-counter" class="text-xl font-bold">22</p>
        </div>
        <div class="w-32">
            <h2>Art Generated</h2>
            <p id="youtube-counter" class="text-xl font-bold">120</p>
        </div>
        <!-- <div class="w-32">
            <h2>Reviews</h2>
            <p id="reviews-counter" class="text-xl font-bold">300+</p>
        </div> -->
    </div>
</div>
<di class="hidden md:block">
    <img src="../../public/about.png" class="h-[80vh]"/>
</div>

<style>
    #border-path {
        animation: draw 1s forwards 1s ease-out;
    }

    @keyframes draw {
        to {
            stroke-dashoffset: 0;
        }
    }
</style>

<script>
    function updatePath() {
        const textMain = document.querySelector("#anim-p") as HTMLElement
        const path = document.querySelector("#border-path") as SVGPathElement

        if (textMain && path) {
            path.setAttribute(
                "d",
                `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${
                    textMain.offsetHeight / 2
                }`
            )
            const pathLength = path.getTotalLength()
    
            path.style.strokeDasharray = pathLength.toString()
            path.style.strokeDashoffset = pathLength.toString()
        }
    }

    //Increment
    function incrementCounter(
        selector: string,
        current: number,
        target: number,
        duration: number,
        letter: string = ""
    ) {
        let counter = document.getElementById(selector)
        let stepTime = Math.abs(Math.floor(duration / target))
        if (current < target && counter) {
            current++
            counter.innerText = current.toString() + letter
            setTimeout(
            () => incrementCounter(selector, current, target, duration, letter),
            stepTime
            )
        }
    }
    incrementCounter("art-counter", 0, 22, 1000)
    incrementCounter("youtube-counter", 0, 120, 1000)
    incrementCounter("reviews-counter", 0, 250, 1000)

    // Update the path when the page loads
    window.addEventListener("DOMContentLoaded", updatePath)
    // Update the path when the window is resized
    window.addEventListener("resize", updatePath)
</script>